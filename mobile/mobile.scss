// =============================================================================
// Mobile Blog Styling - Enhanced for Landing Page Aesthetic
//
// This stylesheet provides responsive and aesthetically optimized styles for
// blog posts specifically on mobile devices, aiming for a cleaner,
// landing page-like presentation. It includes a utility function for string
// manipulation and applies styles based on predefined variables.
//
// NOTE: For a true landing page, consider adapting your HTML structure
// to include specific sections and call-to-action elements.
// =============================================================================

// Import foundational variables, typically containing colors, typography, etc.
@import "common/foundation/variables";

// ---
// Define Sass Fallback Variables for Colors
// These values are used by Sass color functions (like darken, lighten) during compilation.
// At runtime, the CSS variables (e.g., var(--primary-action)) will take precedence
// if they are defined in your theme.
// ---
$primary-action-sass: #3498db;          // Example: A default blue for primary actions
$primary-action-contrast-sass: #ffffff; // Example: White for text on primary action
$secondary-action-sass: #2ecc71;        // Example: A default green for secondary actions
$secondary-action-contrast-sass: #ffffff; // Example: White for text on secondary action
$tertiary-action-sass: #e74c3c;         // Example: A default red for tertiary actions (like outline hover)
$tertiary-action-contrast-sass: #ffffff; // Example: White for text on tertiary action

// ---
// Utility Function: str-split
//
// Splits a string into a list of substrings based on a given separator.
// This function enhances dynamic styling by allowing variable-driven class generation.
//
// Source: Modified from pascalduez (https://gist.github.com/pascalduez/065e560c6314c7e9d7f8)
// Original License: MIT
// ---
/// Splits a String into a list of substrings using `$separator`.
///
/// If `$separator` is omitted, the list returned contains one element consisting of the entire string.
/// If `$separator` is an empty string, the string is converted to a list of all characters.
/// An optional `$limit` can truncate the returned list to a maximum number of elements.
///
/// @param {string} $string - The string to split.
/// @param {string} $separator [null] - The string to split by.
/// @param {number} $limit [null] - Optional limit on the number of splits to be found.
///
/// @return {list} A list of substrings.
///
/// @example
///   str-split("apple,banana,orange", ",") => ("apple", "banana", "orange")
///   str-split("hello", "")             => ("h", "e", "l", "l", "o")
///   str-split("one-two-three", "-", 2) => ("one", "two-three")
@function str-split($string, $separator: null, $limit: null) {
  $string: unquote($string); // Ensure string is unquoted for processing

  // Error handling for incorrect input type
  @if type-of($string) != "string" {
    @error "`str-split` function expects a string for `$string`, but received a #{type-of($string)}.";
  }

  $result: (); // Initialize an empty list to store results

  // Handle case where no separator is provided
  @if not $separator {
    @return ($string); // Return the entire string as a single-element list
  }

  // Handle case where separator is an empty string (split into characters)
  @if $separator == "" {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }
    @return $result;
  }

  // Main splitting logic
  $current-string: $string;
  $separator-length: str-length($separator);

  @while str-index($current-string, $separator) {
    // If a limit is set and we're approaching it, append the rest and terminate the loop
    @if $limit and length($result) >= ($limit - 1) {
      $result: append($result, $current-string);
      $current-string: ""; // Clear to exit the loop
    } @else {
      // Find the separator and slice the string
      $index: str-index($current-string, $separator);
      $result: append($result, str-slice($current-string, 1, ($index - 1)));
      $current-string: str-slice($current-string, ($index + $separator-length));
    }
  }

  // Append any remaining part of the string after the last separator
  @if $current-string != "" {
    $result: append($result, $current-string);
  }

  // Apply the limit after all splits, if the limit was not handled earlier
  @if $limit and $limit > 0 and length($result) > $limit {
    $limited-result: ();
    @for $i from 1 through $limit {
      $return: append($return, nth($result, $i));
    }
    @return $return;
  }

  @return $result;
}

// =============================================================================
// Mobile Specific Blog Styling
//
// Applies styles only when the `$mobile_enabled` variable is true, ensuring
// these styles compile only for mobile contexts.
// =============================================================================
@if $mobile_enabled == "true" {
  // ---
  // Dynamic Class Generation for Categories and Tags
  // Creates classes like `.category-news`, `.tag-css`, etc., and extends
  // the base blog styling placeholders.
  // ---
  $blog-categories: str-split($blog_category, ",");
  @each $category in $blog-categories {
    .category-#{$category} {
      @extend %blog-category;
    }
  }

  $blog-tags: str-split($blog_tag, "|");
  @each $tag in $blog-tags {
    .tag-#{$tag} {
      @extend %blog-tag;
    }
  }

  // ---
  // Base Placeholder Styles for Blog Categories and Tags
  // These styles are shared by all dynamically generated category and tag classes.
  // ---
  %blog-tag,
  %blog-category {
    // General section styling for a cleaner, distinct block appearance
    #topic-title,
    .blog-image-container,
    #post_1 {
      background-color: var(--primary-background-alt); // Use an alternative background for sections
      padding: 20px;                                  // Increased padding for better visual separation
      margin-bottom: 20px;                            // More margin between sections
      border-radius: 8px;                             // Soft rounded corners for a modern look
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);       // Subtle shadow for depth
    }

    // Topic Title Section - treated as a hero heading
    #topic-title {
      text-align: center;
      padding-top: 30px; // More top padding for hero feel
      padding-bottom: 20px;

      h1 {
        font-size: 2.2em;         // More impactful title for a landing page hero
        margin-bottom: 15px;      // Space below the main heading
        color: var(--primary);    // Use primary color for prominence
        line-height: 1.2;         // Tighter line height for large headings
      }
      p { // Assuming a subtitle or tagline might be present here
        color: var(--primary-medium); // Subdued subtitle/tagline
        font-size: 1.1em;
        max-width: 90%;
        margin: 0 auto; // Center the tagline
      }
      a.edit-topic .d-icon { // Keep edit icon less prominent for a landing page
        font-size: 0.5em;
        opacity: 0.6;
        display: none; // Often hidden on landing pages unless explicitly needed
      }
    }

    // Blog Hero Image Container
    .blog-image-container {
      .blog-image {
        height: 300px;            // More prominent image height for hero
        background-size: cover;   // Likely more appropriate for a landing page hero, fills space
        border-radius: 6px;       // Maintain rounded corners
        box-shadow: none;         // Remove shadow if parent has it, or add if desired
      }
    }

    // ---
    // Styling for the First Post (Main Landing Page Content)
    // Transformed from a "post" into a main content section.
    // ---
    #post_1 {
      // Internal padding is already handled by the parent section styling
      padding: 20px; // Ensure internal content has padding

      .topic-body {
        padding-top: 0; // No top padding, content starts directly below title/meta

        &.highlighted {
          animation: none; // Disable highlighting animation for simplicity
        }

        // Hide avatar and meta information for a cleaner landing page look
        .topic-avatar,
        .topic-meta-data {
          display: none;
        }

        .contents {
          border-top: none;      // Remove the border for a smoother flow between sections
          padding-top: 0;        // No top padding if border is removed
        }

        .cooked {
          font-size: 1.15em;      // Base font size for main content, enhanced readability
          line-height: 1.7;       // Generous line height for easier reading
          word-wrap: break-word;  // Ensure long words break correctly
          overflow-wrap: break-word; // Modern equivalent for word-wrap
          color: var(--primary-high); // Ensure good contrast

          // --- Buttons within content ---
          // Styles for general links that should look like buttons
          a:not(.lightbox):not(.d-icon):not(.mention):not(.hashtag) { // Exclude common Discourse links
            display: inline-block;
            background-color: var(--primary-action, #{$primary-action-sass}); // Use CSS var, fallback to Sass var
            color: var(--primary-action-contrast, #{$primary-action-contrast-sass}); // Use CSS var, fallback to Sass var
            padding: 12px 24px;
            text-decoration: none;                       // Remove underline
            border-radius: 6px;                          // Rounded corners for button
            font-weight: bold;
            margin: 10px 10px 10px 0;                    // Spacing around buttons
            transition: background-color 0.3s ease, transform 0.2s ease;
            white-space: nowrap;                         // Prevent button text from wrapping

            &:hover {
              background-color: darken($primary-action-sass, 8%); // Use Sass var here for darken()
              transform: translateY(-2px);               // Slight lift on hover
            }

            // Example of a secondary button style - requires an HTML class like "button-secondary"
            &.button-secondary {
              background-color: var(--tertiary-action, #{$tertiary-action-sass}); // Use CSS var, fallback to Sass var
              color: var(--tertiary-action-contrast, #{$tertiary-action-contrast-sass});
              border: 1px solid var(--tertiary-action, #{$tertiary-action-sass});
              &:hover {
                background-color: darken($tertiary-action-sass, 8%); // Use Sass var here for darken()
              }
            }

            // Example of an outline button style - requires an HTML class like "button-outline"
            &.button-outline {
                background-color: transparent;
                color: var(--primary-action, #{$primary-action-sass});
                border: 2px solid var(--primary-action, #{$primary-action-sass});
                &:hover {
                    background-color: var(--primary-action-low, lighten($primary-action-sass, 40%)); // Use a Sass lightened version as fallback
                    color: var(--primary-action-contrast, #{$primary-action-contrast-sass});
                }
            }
          }

          // --- Typography and Content Structure ---
          big {
            font-size: 2.2rem;          // Prominent first letter (drop cap style)
            line-height: 2.2rem;
            letter-spacing: 0.5px;      // Slightly refined letter spacing
            display: inline-block;
            font-family: Georgia, serif; // Classic serif font for drop cap
            margin-right: 0.1em;        // Small space after the big letter
            color: var(--primary-action, #{$primary-action-sass}); // Give the drop cap a highlight color
          }

          h2, h3, h4, h5, h6 {
            font-family: var(--font-family-headings, 'Arial', sans-serif); // Use a modern sans-serif
            color: var(--primary-high);
            margin-top: 1.8em;        // More space before new sections
            margin-bottom: 0.8em;
            line-height: 1.3;
          }
          h2 { font-size: 1.8em; }
          h3 { font-size: 1.5em; }

          p {
            margin-bottom: 1em; // Standard paragraph spacing
          }

          ul, ol {
            padding-left: 25px; // Indent lists
            margin-bottom: 1.5em;
            li {
              margin-bottom: 0.5em;
            }
          }

          blockquote {
            background: var(--primary-very-low);        // Background color for quotes
            color: var(--primary-text);                  // Text color for quotes
            border-left: 5px solid var(--primary-action-low-mid, lighten($primary-action-sass, 20%)); // Subtle border
            padding: 15px;                               // Internal padding
            margin: 1.5em 0;                             // Vertical margin for separation
            border-radius: 4px;                          // Slight rounding
            font-style: italic;                          // Italicize quoted text

            &:before { // Quote icon styling
              color: var(--primary-action-low-mid, lighten($primary-action-sass, 20%));
              content: open-quote;
              font-size: 3em;
              line-height: 0.1em;
              vertical-align: -0.4em;
              margin-right: 0.1em;
              font-weight: bold;
            }
            p { display: inline; }
          }

          // Image handling within content
          & > p:first-child + div.lightbox-wrapper, // Hide initial hero image duplication
          & > p img:not(.emoji):first-child { // Hide any image that is the very first content
            display: none;
          }

          & > p ~ p img:not(.emoji) { // Display and style images in subsequent paragraphs
            display: block;
            max-width: 100%;
            height: auto;
            margin: 20px auto;          // Center images with good vertical spacing
            border-radius: 8px;         // Rounded corners for images
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); // More prominent shadow
          }

          figure { // Styling for images with figcaptions
            margin: 1.5em 0;
            padding: 0;
            text-align: center;
            img { // Ensure image inside figure is responsive
              max-width: 100%;
              height: auto;
              border-radius: 8px;
            }
          }

          figcaption {
            margin-top: 10px;           // Space between image and caption
            font-size: 0.9em;
            font-weight: normal;       // Less bold, more subtle
            text-align: center;
            color: var(--primary-medium);
          }
        }
      }

      // Hide default Discourse post controls, topic map, and admin menu for a cleaner landing page
      nav.post-controls,
      .topic-map,
      .post-admin-menu {
        display: none;
      }
    }

    // --- Optional: Dedicated Call-to-Action Section ---
    // You'd typically add a div with class "call-to-action" in your HTML template
    .call-to-action {
      background-color: var(--secondary-background); // A distinct background color
      padding: 30px 20px;                             // Generous padding
      text-align: center;
      border-radius: 8px;
      margin-top: 30px;                               // Space above this section
      margin-bottom: 30px;                            // Space below

      h2 {
        font-size: 1.8em;
        color: var(--secondary-strong);               // Strong color for CTA heading
        margin-bottom: 15px;
      }

      p {
        color: var(--secondary-text);                 // Text color for CTA description
        margin-bottom: 25px;
        font-size: 1.1em;
      }

      a.button { // Styles for a primary CTA button within this section
        display: inline-block;
        background-color: var(--secondary-action, #{$secondary-action-sass});    // Prominent action color
        color: var(--secondary-action-contrast, #{$secondary-action-contrast-sass});      // Contrasting text
        padding: 15px 30px;
        text-decoration: none;
        border-radius: 8px;
        font-weight: bold;
        font-size: 1.1em;
        transition: background-color 0.3s ease, transform 0.2s ease;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); // Add a subtle shadow

        &:hover {
          background-color: darken($secondary-action-sass, 8%); // Use Sass var here for darken()
          transform: translateY(-3px);
        }
      }
    }

    // --- Optional: Simple Landing Page Footer ---
    // You'd likely add a div with class "landing-page-footer" to your template
    .landing-page-footer {
      text-align: center;
      padding: 25px 15px;
      color: var(--primary-low-mid);
      font-size: 0.9em;
      border-top: 1px solid var(--primary-low); // Separator from content above
      background-color: var(--primary-background); // Match main background
      margin-top: 30px; // Ensure space
    }
  }
}
